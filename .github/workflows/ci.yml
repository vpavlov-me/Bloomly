name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint:
    name: SwiftLint
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Run SwiftLint
        run: swiftlint --strict

  build-and-test:
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode.app
      OTHER_SWIFT_FLAGS: -warnings-as-errors
    steps:
      - uses: actions/checkout@v5

      - name: Select Xcode
        run: |
          if [ -d "$DEVELOPER_DIR" ]; then
            sudo xcode-select -s "$DEVELOPER_DIR"
          else
            echo "Requested DEVELOPER_DIR '$DEVELOPER_DIR' not found, falling back to default"
            sudo xcode-select -s /Applications/Xcode.app
          fi

      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

      - name: Install Tuist
        run: |
          if ! command -v tuist >/dev/null 2>&1; then
            curl -Ls https://install.tuist.io | bash
          fi

      - name: Install xcpretty
        run: |
          gem install xcpretty --no-document

      - name: Generate Workspace
        run: |
          export PATH="$HOME/.tuist/bin:$PATH"
          tuist generate --path .

      - name: Test iOS App + Packages
        run: |
          xcodebuild -workspace BabyTrack.xcworkspace \
            -scheme "BabyTrack" \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            -parallelizeTargets \
            -skipPackagePluginValidation \
            -enableCodeCoverage YES \
            -resultBundlePath ./TestResults.xcresult \
            test | xcpretty

      - name: Build Widgets Extension
        run: |
          xcodebuild -workspace BabyTrack.xcworkspace \
            -scheme "BabyTrackWidgets" \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            -skipPackagePluginValidation \
            build | xcpretty

      - name: Build watchOS App
        run: |
          xcodebuild -workspace BabyTrack.xcworkspace \
            -scheme "BabyTrackWatch" \
            -destination 'platform=watchOS Simulator,name=Apple Watch Series 9 (45mm)' \
            -skipPackagePluginValidation \
            build | xcpretty

      - name: Generate Coverage Report
        if: success()
        run: |
          xcrun xccov view --report --json ./TestResults.xcresult > coverage.json
          echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          xcrun xccov view --report ./TestResults.xcresult >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: |
            ./TestResults.xcresult
            coverage.json

      - name: Upload Snapshot Failures
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: FailedSnapshots
          path: Tests/__Snapshots__
